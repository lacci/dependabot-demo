name: Renovatebot

on: workflow_dispatch

env:
  REPORT_DIR: renovatebot-reports
  REPORT_NAME: renovate-report.json

jobs:
  renovatebot:
    runs-on: ubuntu-latest
    permissions:
      security-events: read
    steps:
    - name: Echo api url
      run: echo "${{ github.api_url }}"
    
    - name: Checkout
      uses: actions/checkout@v4.2.2
        
    - name: Determine current user
      id: id
      run: |
        echo "user=$(id -u)" >> $GITHUB_OUTPUT
        echo "group=$(id -g)" >> $GITHUB_OUTPUT

    - name: Generate report folder
      run: |
        mkdir -p /tmp/report
        sudo chown -R ${{ steps.id.outputs.user }} /tmp/report

    - name: Self-hosted Renovate
      uses: renovatebot/github-action@v41.0.21
      with:
        docker-user: "${{ steps.id.outputs.user }}:${{ steps.id.outputs.group }}"
        docker-volumes: /tmp/report:/tmp/report
      env:
        LOG_LEVEL: debug
        RENOVATE_TOKEN: ${{ github.token }}
        RENOVATE_REPOSITORIES: ${{ github.repository }}
        # RENOVATE_DRY_RUN: true
        RENOVATE_REPORT_TYPE: file
        RENOVATE_REPORT_PATH: /tmp/report/renovate-report.json
        HOME: ${{ github.workspace }}
    
    - name: Renovatebot report
      run: |
          cat "/tmp/report/renovate-report.json"

    - name: Generate Renovate Report Summary
      run: |
        (
          echo "Dependencies"
          echo "| Name | Current version | Dependency type | New version  |"; 
          echo "|:-----|:----------------|:----------------|:-------------|"; 
          jq -r '
            .repositories[]? 
            | .packageFiles? // {}
            | to_entries[]
            | .value[]
            | select(.deps != null)
            | .deps[]
            | . as $dep
            | "| \(.depName ) | \(.currentVersion // "N/A") | \(.depType) | \(( .updates[] | .newVersion) // "N/A") | \(reduce .updates[] as $up (null; [., $up.newVersion + " (" + $up.updateType + ")"] | map(select(.!=null)) | join("<br>")) // "N/A") | \(.registryUrl // "N/A") |"
          ' /tmp/report/renovate-report.json
        ) >> $GITHUB_STEP_SUMMARY
        (
          echo "Pull requests"
          echo "| PR No | PR Title | Branch Name | Updates |"; 
          echo "|:------|:---------|:------------|:--------|"; 
          jq -r '
            .repositories[]?.branches? // []
            | map(select(.upgrades != null))
            | .[]
            | "| \(.prNo // "NEW" ) | \(.prTitle) | \(.branchName) | \(reduce .upgrades[] as $up (null; [., $up.depName + " (" + $up.updateType + ": " + $up.currentVersion + " -> " + $up.newVersion + ") in " + $up.packageFile] | map(select(.!=null)) | join("<br>"))) |"
          ' /tmp/report/renovate-report.json
        ) >> $GITHUB_STEP_SUMMARY






